<?php
// $Id$

// constants
define('ERRORLYTICS_DEFAULT_URL', 'http://www.errorlytics.com');
define('ERRORLYTICS_URL_VAR_NAME', 'errorlytics_url');
define('ERRORLYTICS_SECRET_KEY_VAR_NAME', 'errorlytics_secret_key');
define('ERRORLYTICS_ACCOUNT_ID_VAR_NAME', 'errorlytics_account_id');
define('ERRORLYTICS_WEBSITE_ID_VAR_NAME', 'errorlytics_website_id');

function errorlytics_menu() {
    $items = array();
    $items['errorlytics'] = array(
        'title' => t('Page not found'),
        'page callback' => 'errorlytics',
        'access callback' => true,
        'type' => MENU_CALLBACK
    );
    $items['admin/settings/errorlytics'] = array(
        'title' => t('Errorlytics module settings'),
        'description' => t('Errorlytics module settings'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('errorlytics_admin'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM
    );
    return $items;
}

function errorlytics_params($path, $secret_key) {
    $params = array();
    foreach ($_SERVER as $key => $value) {
        $params['error[' . strtolower($key) . ']'] = $value;
    }
    $client_occurred_at = gmdate('Y-m-d\TH:i:s\Z');
    $params['error[client_occurred_at]'] = $client_occurred_at;
    $params['signature'] = sha1($client_occurred_at . $path . $secret_key);
    $params['error[fake]'] = 'false';
    $params['format'] = 'xml';
    $params['plugin_type'] = 'drupal';
    return $params;
}

function errorlytics_post($url, $secret_key, $account_id, $website_id) {
    $path = '/accounts/' . $account_id . '/websites/' . $website_id . '/errors';
    $params = errorlytics_params($path, $secret_key);
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url . $path);
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $params);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    $response = curl_exec($ch);
    curl_close($ch);
    return $response;
}

function errorlytics_variable_get_trim($variable, $default) {
    $value = variable_get($variable, $default);
    // we are using false as default below so we don't trim false
    if ($value) $value = trim($value);
    return $value;
}

function errorlytics() {
    $url = errorlytics_variable_get_trim(ERRORLYTICS_URL_VAR_NAME, ERRORLYTICS_DEFAULT_URL);
    $url = chop($url, '/');
    $secret_key = errorlytics_variable_get_trim(ERRORLYTICS_SECRET_KEY_VAR_NAME, false);
    $account_id = errorlytics_variable_get_trim(ERRORLYTICS_ACCOUNT_ID_VAR_NAME, false);
    $website_id = errorlytics_variable_get_trim(ERRORLYTICS_WEBSITE_ID_VAR_NAME, false);

    // if missing settings let fall through to default 404 page
    if (!$url || !$secret_key || !$account_id || !$website_id) return;

    $response = errorlytics_post($url, $secret_key, $account_id, $website_id);

    preg_match('/<response-code>(.+)<\/response-code>/', $response, $matches);
    $response_code = $matches[1];

    preg_match('/<uri>(.+)<\/uri>/', $response, $matches);
    $uri = $matches[1];

    switch ($response_code) {
        case '404':
            // falling through to default drupal 404 page for now
            // this is probably a better idea than taking the 404
            // page from the return
            break;
        case '301':
        case '302':
            // TODO: may want to switch to drupal_goto for in site redirects
            header('Location: ' . $uri, true, $response_code);
            break;
    }
}

/*
function errorlytics_help($path, $arg) {
    return 'provide help or ditch this func?';
}
*/

function errorlytics_perm() {
    return array('administer errorlytics');
}

function errorlytics_admin() {
    $form = array();
    $form[ERRORLYTICS_URL_VAR_NAME] = array(
        '#type' => 'textfield',
        '#title' => t('Errorlytics URL'),
        '#default_value' => variable_get(ERRORLYTICS_URL_VAR_NAME, ERRORLYTICS_DEFAULT_URL),
        '#description' => t('The URL hosting the Errorlytics service.'),
        '#required' => true
    );
    $form[ERRORLYTICS_SECRET_KEY_VAR_NAME] = array(
        '#type' => 'textfield',
        '#title' => t('Errorlytics Secret Key'),
        '#default_value' => variable_get(ERRORLYTICS_SECRET_KEY_VAR_NAME, ''),
        '#description' => t('Your secret key for the Errorlytics service.'),
        '#required' => true
    );
    $form[ERRORLYTICS_ACCOUNT_ID_VAR_NAME] = array(
        '#type' => 'textfield',
        '#title' => t('Errorlytics Account ID'),
        '#default_value' => variable_get(ERRORLYTICS_ACCOUNT_ID_VAR_NAME, ''),
        '#description' => t('Your account id for the Errorlytics service.'),
        '#required' => true
    );
    $form[ERRORLYTICS_WEBSITE_ID_VAR_NAME] = array(
        '#type' => 'textfield',
        '#title' => t('Errorlytics Website ID'),
        '#default_value' => variable_get(ERRORLYTICS_WEBSITE_ID_VAR_NAME, ''),
        '#description' => t('Your website id for the Errorlytics service.'),
        '#required' => true
    );
    return system_settings_form($form);
}
